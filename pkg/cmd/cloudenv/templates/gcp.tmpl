{{define "default"}}{{if .unset -}}
gcloud auth revoke $GOOGLE_CREDENTIALS_ACCOUNT --verbosity=error;
unset GOOGLE_CREDENTIALS;
unset GOOGLE_CREDENTIALS_ACCOUNT;
unset CLOUDSDK_CORE_PROJECT;
unset CLOUDSDK_COMPUTE_REGION;
{{else -}}
export GOOGLE_CREDENTIALS={{.credentials | toJson | replace "'" "'\\''" | squote}};
export GOOGLE_CREDENTIALS_ACCOUNT={{.credentials.client_email | quote}};
export CLOUDSDK_CORE_PROJECT={{.credentials.project_id | quote}};
export CLOUDSDK_COMPUTE_REGION={{.region | quote}};
gcloud auth activate-service-account $GOOGLE_CREDENTIALS_ACCOUNT --key-file <(printf "%s" "$GOOGLE_CREDENTIALS");
{{end}}
{{.usageHint}}{{end}}

{{define "bash"}}{{template "default" .}}{{end}}
{{define "zsh"}}{{template "default" .}}{{end}}

{{define "fish"}}{{if .unset -}}
gcloud auth revoke $GOOGLE_CREDENTIALS_ACCOUNT --verbosity=error;
set -e GOOGLE_CREDENTIALS;
set -e GOOGLE_CREDENTIALS_ACCOUNT;
set -e CLOUDSDK_CORE_PROJECT;
set -e CLOUDSDK_COMPUTE_REGION;
{{else -}}
set -gx GOOGLE_CREDENTIALS {{.credentials | toJson | replace "'" "''" |  squote}};
set -gx GOOGLE_CREDENTIALS_ACCOUNT {{.credentials.client_email | quote}};
set -gx CLOUDSDK_CORE_PROJECT {{.credentials.project_id | quote}};
set -gx CLOUDSDK_COMPUTE_REGION {{.region | quote}};
gcloud auth activate-service-account $GOOGLE_CREDENTIALS_ACCOUNT --key-file (printf "%s" "$GOOGLE_CREDENTIALS" | psub);
{{end}}
{{.usageHint}}{{end}}

{{define "powershell"}}{{if .unset -}}
gcloud auth revoke $Env:GOOGLE_CREDENTIALS_ACCOUNT --verbosity=error;
Remove-Item -ErrorAction SilentlyContinue Env:\GOOGLE_CREDENTIALS;
Remove-Item -ErrorAction SilentlyContinue Env:\CLOUDSDK_CORE_PROJECT;
Remove-Item -ErrorAction SilentlyContinue Env:\CLOUDSDK_COMPUTE_REGION;
{{else -}}
$Env:GOOGLE_CREDENTIALS = {{.credentials | toJson | replace "'" "''" | squote}};
$Env:GOOGLE_CREDENTIALS_ACCOUNT = {{.credentials.client_email | quote}};
$Env:CLOUDSDK_CORE_PROJECT = {{.credentials.project_id | quote}};
$Env:CLOUDSDK_COMPUTE_REGION = {{.region | quote}};
function Invoke-WithGoogleCredentials {param([Parameter(Mandatory)] [ScriptBlock] $sb); $f = [IO.Path]::GetTempFilename(); try {$Env:GOOGLE_CREDENTIALS | Out-File -Encoding utf8 $f; Invoke-Command -ScriptBlock $sb -ArgumentList $f} catch {Remove-Item -ErrorAction SilentlyContinue $f}};
Invoke-WithGoogleCredentials {param($f) gcloud auth activate-service-account $Env:GOOGLE_CREDENTIALS_ACCOUNT --key-file $f};
{{end}}{{.usageHint}}{{end}}